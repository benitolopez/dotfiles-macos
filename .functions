# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Change working directory to the top-most Finder window location
function cdf() { # short for `cdfinder`
	cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}

# Use Gitâ€™s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
# Be sure to create a symbolic link in /usr/local/bin 
# ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/.
function s() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# `wp` creates a WordPress installation
function wp() {
	# read user input
	echo "Type the $(tput setaf 2)name of the database$(tput sgr0):"
	read -e DB_NAME

	echo "Type the $(tput setaf 2)database username$(tput sgr0):"
	read -e DB_USERNAME

	echo "Type the $(tput setaf 2)database password$(tput sgr0):"
	read -e DB_PASSWORD

	# create database
	echo "$(tput setaf 4)Creating database...$(tput sgr0)"
	mysql -u $DB_USERNAME  -p$DB_PASSWORD -e "create database "$DB_NAME";"
	echo "$(tput setaf 5)Done!$(tput sgr0)"

	# download wordpress
	echo "$(tput setaf 4)Downloading latest WordPress...$(tput sgr0)"
	curl -O https://wordpress.org/latest.tar.gz
	tar -xvzf latest.tar.gz --strip-components=1
	rm latest.tar.gz
	echo "$(tput setaf 5)Done!$(tput sgr0)"

	# configure wp-config
	echo "$(tput setaf 4)Configuring wp-config.php...$(tput sgr0)"
	cp wp-config-sample.php wp-config.php
	perl -pi -e "s/database_name_here/$DB_NAME/g" wp-config.php
	perl -pi -e "s/username_here/$DB_USERNAME/g" wp-config.php
	perl -pi -e "s/password_here/$DB_PASSWORD/g" wp-config.php
	perl -pi -e "s/'WP_DEBUG', false/'WP_DEBUG', true/g" wp-config.php
	echo "$(tput setaf 5)Done!$(tput sgr0)"

	echo "$(tput setaf 5)WordPress installed!$(tput sgr0)"
}
